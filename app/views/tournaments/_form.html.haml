= simple_form_for @tournament, :html => { :class => 'form-horizontal' } do |f|
  = f.association :sport, :include_blank => false
  = f.input :name, :disabled => (@tournament.created? ? nil : true), :label => I18n.t("custom_translations.name", :default => "name").capitalize
  = f.input :start_date, :required => true, :label => I18n.t("custom_translations.start date", :default => "start date").capitalize do
    - @date = @tournament.start_date.nil?? DateTime.now : @tournament.start_date
    = text_field_tag :start_date_date, @date.strftime("%Y-%m-%d"), :class => 'datepicker-dynamic input-small', :disabled => (@tournament.created? ? nil : true)
    = text_field_tag :start_date_time, @date.strftime("%H:%M"), :class => 'timepicker-dynamic input-small', :disabled => (@tournament.created? ? nil : true)
  = f.input :description, :disabled => (@tournament.created? ? nil : true), :label => I18n.t("custom_translations.description", :default => "description").capitalize
  = f.input :open, :label => I18n.t("custom_translations.is open", :default => "is open").capitalize + "?"
  - if @tournament.tournament_form.present?
    .control-group.tournament-form{ :class => ( 'none' unless @tournament.open )}
      %label.control-label
        = I18n.t("custom_translations.fields", :default => "fields").capitalize
      .form-checkboxes
        = f.simple_fields_for :tournament_form_attributes, @tournament.tournament_form do |tf|
          = tf.input :rank, :wrapper_class => "pull-left", :label => I18n.t("custom_translations.rank", :default => "rank").capitalize
          = tf.input :name, :wrapper_class => "pull-left", :label => I18n.t("custom_translations.name and surname", :default => "name and surname").capitalize
          = tf.input :licence, :wrapper_class => "pull-left", :label => I18n.t("custom_translations.licence", :default => "licence").capitalize
          = tf.input :phone, :wrapper_class => "pull-left", :label => I18n.t("custom_translations.phone", :default => "phone").capitalize
          = tf.input :comment, :wrapper_class => "pull-left", :label => I18n.t("custom_translations.comment", :default => "comment").capitalize
        .clearfix
  .form-actions
    - if request.xhr?
      = link_to '#players-modal', :class => 'btn btn-modal', :data => { :toggle => 'modal' }, :role => 'button' do
        %i.icon-fullscreen
        - unless @tournament.created?
          = I18n.t("custom_translations.show players", :default => "show players").capitalize
        - else
          = I18n.t("custom_translations.manage players", :default => "manage players").capitalize
    - if request[:action] == 'edit'
      - if @tournament.created?
        = link_to I18n.t("custom_translations.set bracket", :default => 'set bracket').capitalize, '#bracket-modal', :data => { :toggle => 'modal' }, :role => 'button', :class => 'btn btn-modal'
      - unless @tournament.created?
        = link_to I18n.t("custom_translations.go to bracket", :default => 'go to bracket').capitalize, tournament_bracket_path(@tournament), :class => 'btn'
    .margin-top
      - if @tournament.created?
        = f.button :submit, request[:action] == 'edit' ? I18n.t("custom_translations.update", :default => 'update').capitalize : I18n.t("custom_translations.create", :default => 'create').capitalize, :class => 'btn'
      - if request[:action] == 'new'
        = link_to I18n.t("custom_translations.cancel", :default => "cancel").capitalize, tournaments_user_path, :class => 'btn'
      - if request[:action] == 'edit'
        - if @tournament.started?
          = link_to I18n.t("custom_translations.break", :default => 'break').capitalize, start_tournament_path(@tournament), :class => "btn btn-warning", :method => 'put', :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure? All tournament progress will be lost!')) }
          = link_to I18n.t("custom_translations.finish", :default => 'finish').capitalize, finish_tournament_path(@tournament), :class => "btn btn-warning", :method => 'put', :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm finish", :default => 'Are you sure? You will be unable to undo this operation.')) }
        - elsif @tournament.created?
          = link_to I18n.t("custom_translations.start", :default => 'start').capitalize, start_tournament_path(@tournament), :class => "btn btn-success", :method => 'put', :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }
        - unless @tournament.finished?
          = link_to I18n.t("custom_translations.delete", :default => 'delete').capitalize, tournament_path(@tournament), :method => :delete, :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-danger'    
    
%script
  $('.datepicker-dynamic').datepicker({format: 'yyyy-mm-dd', autoclose: true});
  $('.timepicker-dynamic').timepicker({showMeridian: false, defaultTime: 'value', showInputs: true });
