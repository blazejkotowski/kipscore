- provide :title, I18n.t("custom_translations.tournaments", :default => "turnieje").capitalize

- model_class = Tournament
#facebook-like-top
  .facebook-teaser
    = I18n.t("custom_translations.facebook teaser").html_safe
  = render "shared/facebook_like_button"
.page-header
  %h1= I18n.t("custom_translations.tournaments", :default => "tournaments").capitalize

%ul.nav.nav-tabs
  %li{ :class => ('active' if ['created', nil].include?(params[:state]) ) }= link_to t("navigation.tournaments.index.upcoming").capitalize, tournaments_path
  %li{ :class => ('active' if params[:state] == 'started') }= link_to t("navigation.tournaments.index.started").capitalize, tournaments_path(:state => 'started')
  %li{ :class => ('active' if params[:state] == 'finished') }= link_to t("navigation.tournaments.index.finished").capitalize, tournaments_path(:state => 'finished')

= search_form_for @search, :url => search_tournaments_path(:state => params[:state]), :method => :post, :class => 'form-inline search-form' do |f|
  .field-wrapper
    = f.select :sport_id_eq, options_for_select(sport_options)
  .field-wrapper
    = f.text_field :name_cont, :placeholder => I18n.t("custom_translations.name", :default=>'name').capitalize
  .field-wrapper
    = f.label :start_date, I18n.t("custom_translations.start date", :default=>'start date').capitalize
    = f.text_field :start_date_gteq, :class => 'datepicker input-small', :placeholder => I18n.t("custom_translations.from", :default => "from").capitalize
    = f.text_field :start_date_lteq, :class => 'datepicker input-small', :placeholder => I18n.t("custom_translations.to", :default => "to").capitalize
  .field-wrapper
    = f.submit I18n.t("custom_translations.search", :default => "search").capitalize, :class => 'btn btn-small'

- unless @tournaments.empty?
  %table.table.table-striped
    %thead
      %tr
        %th= I18n.t("custom_translations.organizer", :default => "organizer").capitalize
        %th= I18n.t("custom_translations.name", :default => "name").capitalize
        %th= I18n.t("custom_translations.start date", :default => "start date").capitalize
        %th= I18n.t("custom_translations.actions", :default => "actions").capitalize
    %tbody
      - @tournaments.each do |tournament|
        %tr
          %td= link_to tournament.user.profile.club, user_profile_path(tournament.user.profile.link) if tournament.user.profile.link.present?
          %td= link_to tournament.name, tournament_path(tournament)
          %td= tournament.start_date.strftime("%d-%m-%Y, %H:%M")
          %td
            = link_to I18n.t("custom_translations.more", :default => "more").capitalize , tournament_path(tournament), :class => 'btn btn-mini'
            - if tournament.joinable?
              = link_to t("custom_translations.join", :default => "join").capitalize, tournament_join_path(tournament), :class => 'btn btn-mini btn-warning'
            - unless tournament.created?
              = link_to I18n.t("custom_translations.progress", :default => "progress").capitalize, tournament_progress_path(tournament), :class => 'btn btn-mini btn-success'
  .pagination= paginate @tournaments
- else
  %h2= I18n.t("custom_translations.no tournaments")

= link_to I18n.t("custom_translations.create new tournament", :default => "create new tournament").capitalize, new_tournament_path, :class => 'btn btn-primary btn-large'
